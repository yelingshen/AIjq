name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements-pin.txt ]; then pip install -r requirements-pin.txt; else if [ -f multi_tool/requirements.txt ]; then pip install -r multi_tool/requirements.txt; fi; fi

      - name: Install dev dependencies (for lint/format)
        run: |
          if [ -f requirements-dev.txt ]; then python -m pip install -r requirements-dev.txt; else echo 'no dev requirements'; fi

      - name: Lint (ruff) - format then check (FAIL on issues)
        run: |
          if command -v ruff >/dev/null 2>&1; then
            ruff format . || true
            ruff check .
            if [ $? -ne 0 ]; then
              echo "ruff check failed; aborting CI"
              exit 1
            fi
          else
            echo "ruff not installed; failing CI"
            exit 1
          fi

      - name: Run unit tests
        run: |
          PYTHONPATH=. python3 -m unittest discover -s multi_tool/tests -p 'test_*.py'

      - name: Update README (non-blocking)
        run: |
          PYTHONPATH=. python3 -m multi_tool.readme_manager --update || echo 'README update failed (non-blocking)'

      - name: Commit README updates (requires CI_PUSH_TOKEN)
        if: github.event_name != 'pull_request' && env.CI_PUSH_TOKEN != ''
        env:
          CI_PUSH_TOKEN: ${{ secrets.CI_PUSH_TOKEN }}
        run: |
          git config user.name "github-actions"
          git config user.email "actions@users.noreply.github.com"
          git add multi_tool/README.md
          if git diff --staged --quiet; then
            echo "No README changes to commit"
            exit 0
          fi
          git commit -m "ci: update README"
          # push using token
          remote_url=$(git remote get-url origin)
          auth_remote=$(echo "$remote_url" | sed -E "s#https://([^/]+)#https://$CI_PUSH_TOKEN@\1#")
          git push "$auth_remote" HEAD:${{ github.ref }}

